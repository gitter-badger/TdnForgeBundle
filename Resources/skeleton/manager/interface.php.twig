<?php

{% block namespace_block %}
namespace {{ namespace }}\Entity\Manager;
{% endblock %}

{% block use_statements %}
use Doctrine\Common\Collections\ArrayCollection;
use {{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity }}Interface;
{% endblock use_statements %}

/**
{% block phpdoc_class_header %}
 * Interface {{ entity }}ManagerInterface
 * @package {{ namespace }}\Entity\Manager{{ entity_namespace ? '\\' ~ entity_namespace : '' }}
{% endblock phpdoc_class_header %}
 */
{% block class_definition %}
interface {{ entity }}ManagerInterface
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * @param array $criteria
     * @param array $orderBy
     *
     * @return {{ entity }}Interface
     */
    public function find{{ entity }}By(array $criteria, array $orderBy = null);

    /**
     * @param array $criteria
     * @param array $orderBy
     * @param integer $limit
     * @param integer $offset
     *
     * @return ArrayCollection|{{ entity }}Interface[]
     */
{% if entity|pluralize|length >= 23 %}
    public function find{{ entity|pluralize }}By(
        array $criteria,
        array $orderBy = null,
        $limit = null,
        $offset = null
    );
{% else %}
    public function find{{ entity|pluralize }}By(array $criteria, array $orderBy = null, $limit = null, $offset = null);
{% endif %}

    /**
     * @param {{ entity }}Interface ${{ entity|lowerfirst }}
     * @param bool $andFlush
     * @param bool $forceId
     *
     * @return void
     */
{% if entity|length >= 22 %}
    public function update{{ entity }}(
        {{ entity }}Interface ${{ entity|lowerfirst }},
        $andFlush = true,
        $forceId = false
    );
{% else %}
    public function update{{ entity }}({{ entity }}Interface ${{ entity|lowerfirst }}, $andFlush = true, $forceId = false);
{% endif %}

    /**
     * @param {{ entity }}Interface ${{ entity|lowerfirst }}
     *
     * @return void
     */
{% if entity|length >= 27 %}
    public function delete{{ entity }}(
        {{ entity }}Interface ${{ entity|lowerfirst }}
    );
{% else %}
    public function delete{{ entity }}({{ entity }}Interface ${{ entity|lowerfirst }});
{% endif %}

    /**
     * @return string
     */
    public function getClass();

    /**
     * @return {{ entity }}Interface
     */
    public function create{{ entity }}({{ entity_construct_params }});
{% endblock class_body %}
}
